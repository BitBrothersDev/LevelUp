- levels = Level.all.to_a
- with_contents =  [OpenStruct.new(title: 'With Materials')]
- with_contents  << OpenStruct.new(title: 'Without Materials')
- with_contents2  = [ OpenStruct.new(title: 'With explanation')]
- with_contents2  << OpenStruct.new(title: 'Without explanation')
- level_title_params = params[:level_title]
- with_contents_params = params[:materials]
- with_explanation_params = params[:explanation]
- new_params = {level_title: params[:level_title], material: with_contents_params, explanation: with_explanation_params}

.bg-purple.m-2.p-3.rounded
  .my-5.p-3.bg-white.rounded.shadow-sm
    %h6.d-flex.border-bottom.border-gray.pb-2.mb-0
      %ul#myTab.nav.nav-pills{:role => "tablist"}
        = link_to "All", random_skill_level_item_skill_level_items_path(level_title: "All"), :class => "nav-link #{level_title_params == "All" ? 'active' : ''}"

        - levels.each_with_index do |level, i|
          - link_class = level_title_params == level.title ? 'active' : ''
          %li.nav-item{:role => "presentation"}
            = link_to level.title, random_skill_level_item_skill_level_items_path(new_params.merge(level_title:  level.title)), :class => "nav-link #{link_class}"
        - with_contents.each_with_index do |level, i|
          - link_class = with_contents_params == level.title ? 'active' : ''
          %li.nav-item{:role => "presentation"}
            = link_to level.title, random_skill_level_item_skill_level_items_path(new_params.merge(materials:  level.title)), :class => "nav-link #{link_class}"
        - with_contents2.each_with_index do |level, i|
          - link_class = with_explanation_params == level.title ? 'active' : ''
          %li.nav-item{:role => "presentation"}
            = link_to level.title, random_skill_level_item_skill_level_items_path(new_params.merge(explanation:  level.title)), :class => "nav-link #{link_class}"
        %li.nav-item
          .nav-link= @skill_level_items.count
= render 'skill_level_items/general_skill_level_item_template'